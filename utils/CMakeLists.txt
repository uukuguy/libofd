PROJECT(libofd)

AUX_SOURCE_DIRECTORY(. LIBUTILS_SRCS)

# -------- libxml2 --------
FIND_PACKAGE(LibXml2 REQUIRED)
INCLUDE_DIRECTORIES(${LIBXML2_INCLUDE_DIR})

# -------- libuuid --------
if (CMAKE_SYSTEM_NAME MATCHES "Linux")
    SET(LIBUUID_LIBRARIES uuid)
endif ()

# -------- GLIB --------
FIND_PACKAGE(GLIB REQUIRED)
INCLUDE_DIRECTORIES(${GLIB_INCLUDE_DIRS})

# -------- Fontforge --------
FIND_PACKAGE(Fontforge REQUIRED)
INCLUDE_DIRECTORIES(${FONTFORGE_INCLUDE_DIRS})

# -------- gflags --------
FIND_PACKAGE(GFlags REQUIRED)
INCLUDE_DIRECTORIES(${GFLAGS_INCLUDE_DIRS})

ADD_LIBRARY(utils SHARED ${LIBUTILS_SRCS})
SET_TARGET_PROPERTIES(utils PROPERTIES CLEAN_DIRECT_OUTPUT 1)

ADD_LIBRARY(utils_static STATIC ${LIBUTILS_SRCS})
SET_TARGET_PROPERTIES(utils_static PROPERTIES OUTPUT_NAME "utils")
SET_TARGET_PROPERTIES(utils_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}" )

TARGET_LINK_LIBRARIES(utils ${FONTFORGE_LIBRARIES} ${GLIB_LIBRARIES} ${LIBXML2_LIBRARIES} ${LIBUUID_LIBRARIES} ${GFLAGS_LIBRARY} zip tinyxml2)

TARGET_LINK_LIBRARIES(utils_static ${FONTFORGE_LIBRARIES} ${GLIB_LIBRARIES} ${LIBXML2_LIBRARIES} ${LIBUUID_LIBRARIES} ${GFLAGS_LIBRARY} zip tinyxml2)

INSTALL(TARGETS utils_static
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)
